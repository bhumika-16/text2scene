pipeline{
    agent any

environment {
        SUDO_PASSWORD = 'Bhumika@16'
    }
    stages {
        stage("Code Fetch")
        {
            steps{
                git url: "https://github.com/bhumika-16/text2scene.git" ,branch:"main"
            }
        }
        stage("Build Backend Docker Image")
        {
            steps{
                sh "docker build -t bhumika-t2i-backend src/backend"
            }
        }

        stage("Build Frontend Docker Image")
        {
            steps{
                sh "docker build -t bhumika-t2i-frontend src/frontend"
            }
        }
        stage("Push Backend Docker Images")
        {
            steps{
                withCredentials([usernamePassword(credentialsId:"DockerHubCred",passwordVariable:"dockerpassword",usernameVariable:"dockerusername")]){

                    sh "docker login -u ${env.dockerusername} -p ${env.dockerpassword}"
                    sh "docker tag bhumika-t2i-backend  ${env.dockerusername}/bhumika-t2i-backend"
                    sh "docker push ${env.dockerusername}/bhumika-t2i-backend"

                }
            }

        }
        stage("Push Frontend Docker Images")
        {
            steps{
                withCredentials([usernamePassword(credentialsId:"DockerHubCred",passwordVariable:"dockerpassword",usernameVariable:"dockerusername")]){

                    sh "docker login -u ${env.dockerusername} -p ${env.dockerpassword}"
                    sh "docker tag bhumika-t2i-frontend  ${env.dockerusername}/bhumika-t2i-frontend"
                    sh "docker push ${env.dockerusername}/bhumika-t2i-frontend"

                }
            }

        }

        stage("Deploy Kubernetes pods") {
            steps {
                script {
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f deploy/mysql-deploy.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f deploy/nginx-deploy.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f deploy/backend-deploy.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f deploy/frontend-deploy.yaml"
                }
            }
        }

       stage("Set Ingress rules for Frontend and Backend") {
            steps {
                script {
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f manifests/ingress/ingress-backend.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f manifests/ingress/ingress-frontend.yaml"
                }
            }
        }

        stage("Deploy Kubernetes services") {
            steps {
                script {
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f manifests/svc/backend-service.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f manifests/svc/frontend-service.yaml"
                    sh "echo ${env.SUDO_PASSWORD} | sudo -S kubectl apply -f manifests/svc/nginx-svc.yaml"
                }
            }
        }
    }
    post {
        always {
            emailext subject: 'Jenkins Calculator Project',
                    body: 'Project built now...',
                    to: 'asijit1610@gmail.com'
        }
    }
}
